name: Check Version on Release

on:
  # push:
  release:
    types: [published]

jobs:
  check_version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get Versions
        run: |
          release_version=$(git tag --sort=v:refname | tail -n 1)
          python_version=$(grep -oP '(?<=version = ")[^"]*' pyproject.toml)
          echo "release_version=$release_version" >> "$GITHUB_ENV"
          echo "python_version=$python_version" >> "$GITHUB_ENV"
  
      - name: Fail if pyproject version differs from release version
        if: ${{ env.release_version != env.python_version }}
        run: |
          echo "Release version ($release_version) differs to the version in pyproject.toml ($python_version)"
          exit 1
      
      - name: Create Release
        id: create_release
        if: ${{ success() }}
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.release_version }}
          release_name: Release ${{ env.release_version }}
          draft: false